# Problem #1 pair_target_sum

def pair_target_sum(array,target):
    left_pointer = 0
    right_pointer = len(array) - 1
    while(left_pointer < right_pointer):
        sum = array[left_pointer] + array[right_pointer]
        if sum == target:
            return [left_pointer, right_pointer]
        
        if sum > target:
            right_pointer -= 1
        
        else:
            left_pointer += 1
    return [-1, -1]
print(pair_target_sum([1, 2, 3, 4, 6],6))
print(pair_target_sum([5,10,15,20],20))
                        
#Problem #2 Remove_Dupes

def remove_dupes(array):
    next_non_dupe = 1
    dupe = 0
    while (dupe < len(array)):
        if array[next_non_dupe - 1] != array[dupe]:
            array[next_non_dupe] = array[dupe]
            next_non_dupe += 1
        dupe += 1
    return next_non_dupe
print(remove_dupes([4,4,4,8,2,2,5,1,6]))        
 
#Problem #3 Remove num based on input key

def remove_key_dupe(array,target):
    next_ele = 0
    for i in range(len(array)):
        if array[i] != target:
            array[next_ele] = array[i]
            next_ele += 1
    return next_ele
print(remove_key_dupe([4,4,4,8,2,2,5,1,6],4))  

#Problem #4 Squaring Sorted array

def square_sort(arr):
    left_point = 0
    right_point = len(arr) - 1
    square_list = [0 for i in range(len(arr)-1)]
    max_sqre_indx = len(arr) - 1     
    while left_point <= right_point:
        left_square = arr[left_point]**2
        right_square = arr[right_point]**2
        if left_square > right_square:
            square_list[max_sqre_indx] = left_square
            left_point += 1
        else:
            square_list[max_sqre_indx] = right_square
            right_point -= 1
        max_sqre_indx -= 1
    return square_list
print("Squares: " + str(square_sort([-2, -1, 0, 2, 3])))
print("Squares: " + str(square_sort([-3, -1, 0, 1, 2])))
